@use 'sass:map';
@use '@angular/material' as mat;
@use '../core/theming/palette' as fds;

@mixin multiple-backgrounds($backgrounds...) {
  $multi-background: ();

  @each $background in $backgrounds {
    $multi-background: append($multi-background, $background, comma);
  }

  background: $multi-background;
}

@mixin theme($theme) {
  $background: map.get($theme, background);
  $foreground: map.get($theme, foreground);
  $accent: map.get($theme, accent);
  $primary: map.get($theme, primary);

  $avatar-path: "data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' width='24' height='24'%3E%3Cdefs%3E%3Cstyle%3E.a%7Bfill:white%7D%3C/style%3E%3C/defs%3E%3Cpath class='a' d='M12 5.2c1.66 0 3 1.34 3 3s-1.34 3-3 3-3-1.34-3-3 1.34-3 3-3zm0 14.2c-2.5 0-4.71-1.28-6-3.22.03-1.99 4-3.08 6-3.08 1.99 0 5.97 1.09 6 3.08-1.29 1.94-3.5 3.22-6 3.22z'/%3E%3C/svg%3E";
  $uxg-default-avatar: url($avatar-path) center center / 120% 120% no-repeat;

  .uxg-avatar {
    color: mat.get-contrast-color-from-palette(fds.$uxg-gradient, vertical);
    background: mat.get-color-from-palette(fds.$uxg-gradient, vertical);

    &.uxg-primary-color {
      background: mat.get-color-from-palette($primary, default);
    }

    &.uxg-accent-color {
      background: mat.get-color-from-palette($accent, default);
    }

    &.uxg-gravatar {
      background: none;
    }

    &:empty:not(img) {
      @include multiple-backgrounds($uxg-default-avatar, top left / 100% 100% no-repeat mat.get-color-from-palette(fds.$uxg-gradient, vertical));

      &.uxg-primary-color {
        @include multiple-backgrounds($uxg-default-avatar, mat.get-color-from-palette($primary, default));
      }

      &.uxg-accent-color {
        @include multiple-backgrounds($uxg-default-avatar, mat.get-color-from-palette($accent, default));
      }
    }
  }

  img {
    &.uxg-avatar {
      background: mat.get-color-from-palette($background, background);
    }
  }

  .uxg-avatar-list {
    > li, > uxg-avatar {
      > .uxg-avatar {
        border: 1px solid mat.get-color-from-palette($background, background);
      }
    }
  }

  .uxg-avatar-number {
    color: mat.get-color-from-palette($foreground, text);
  }
}

@mixin typography($config) {
  .uxg-avatar {
    @include mat.typography-level($config, display-6);

    &[large] {
      @include mat.typography-level($config, display-4);
    }

    &[dense] {
      @include mat.typography-level($config, body-2);
    }
  }

  .uxg-avatar-number {
    font: {
      family: mat.font-family($config, subtitle-1);
      size: mat.font-size($config, subtitle-1);
    }
  }

  *[large] {
    .uxg-avatar {
      @include mat.typography-level($config, display-5);
    }
  }

  *[dense] {
    .uxg-avatar {
      @include mat.typography-level($config, body-2);
    }

    .uxg-avatar-number {
      font: {
        family: mat.font-family($config, caption);
        size: mat.font-size($config, caption);
      }
    }
  }
}
