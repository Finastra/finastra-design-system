/* stylelint-disable no-invalid-position-at-import-rule */
@use '@angular/material' as mat;
@use './palette' as uxg-palette;

$uxg-primary: mat.define-palette(uxg-palette.$uxg-violet, 500, 100, 900);
$uxg-accent:  mat.define-palette(uxg-palette.$uxg-fuchsia, 500, 100, 900);
$uxg-warn:    mat.define-palette(uxg-palette.$uxg-amber, 100, 75, 100-dark);
$uxg-error:   mat.define-palette(uxg-palette.$uxg-crimson, 100, 75, 100-dark);
$uxg-success: mat.define-palette(uxg-palette.$uxg-grass, 100, 75, 100-dark);

// Creates a container object for a light theme to be given to individual component theme mixins.
@function uxg-light-theme() {
  @return (
    primary: $uxg-primary,
    accent: $uxg-accent,
    warn: $uxg-warn,
    error: $uxg-error,
    success: $uxg-success,
    is-dark: false,
    foreground: uxg-palette.$uxg-light-theme-foreground,
    background: uxg-palette.$uxg-light-theme-background,
  );
}

// Creates a container object for a dark theme to be given to individual component theme mixins.
@function uxg-dark-theme() {
  @return (
    primary: $uxg-primary,
    accent: $uxg-accent,
    warn: $uxg-warn,
    error: $uxg-error,
    success: $uxg-success,
    is-dark: true,
    foreground: uxg-palette.$uxg-dark-theme-foreground,
    background: uxg-palette.$uxg-dark-theme-background,
  );
}

$light-theme: uxg-light-theme();
$dark-theme: uxg-dark-theme();
