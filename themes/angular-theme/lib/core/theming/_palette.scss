@import "~@angular/material/theming";

@function mat-color($palette, $hue: default, $opacity: null) {
  // If hueKey is a number between zero and one, then it actually contains an
  // opacity value, so recall this function with the default hue and that given opacity.
  @if type-of($hue) == number and $hue >= 0 and $hue <= 1 {
    @return mat-color($palette, default, $hue);
  }

  $color: map-get($palette, $hue);

  @if (type-of($color) != color) {
    @if ($opacity == null) {
      @return $color;
    }

    // Here is the change from the original function:
    // If the $color resolved to something different from a color, we assume it is a CSS variable
    // in the form of rgba(var(--rgba-css-var),a) and replace the 'a' value.
    @return #{str-slice($color, 0, str-index($color, ",")) + $opacity + ")"};
  }

  @return rgba($color, if($opacity == null, opacity($color), $opacity));
}

$uxg-charcoal: #414141;

$uxg-violet: (
  50: #f7f6fd,
  100: rgba(var(--color-primary-lighter), 1),
  200: #d9d3f5,
  300: #b4a6ea,
  400: #917ee0,
  500: rgba(var(--color-primary), 1),
  600: #4538cb,
  700: #2123c0,
  800: #141483,
  900: rgba(var(--color-primary-darker), 1),
  contrast: (
    50: $dark-primary-text,
    100: rgba(var(--text-color-primary-lighter), 1),
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $dark-primary-text,
    500: rgba(var(--text-color-primary), 1),
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: rgba(var(--text-color-primary-darker), 1),
  ),
);

$uxg-fuchsia: (
  50: #fbc9ee,
  100: rgba(var(--color-secondary-lighter), 1),
  200: #f66cd4,
  300: #e453bf,
  400: #d648b2,
  500: rgba(var(--color-secondary), 1),
  600: #ac258d,
  700: #9d1880,
  800: #910d75,
  900: rgba(var(--color-secondary-darker), 1),
  contrast: (
    50: $dark-primary-text,
    100: rgba(var(--text-color-secondary-lighter), 1),
    200: $dark-primary-text,
    300: $dark-primary-text,
    400: $light-primary-text,
    500: rgba(var(--text-color-secondary), 1),
    600: $light-primary-text,
    700: $light-primary-text,
    800: $light-primary-text,
    900: rgba(var(--text-color-secondary-darker), 1),
  ),
);

$uxg-crimson: (
  25: #f8bdcf,
  50: #f17fa2,
  75: rgba(var(--color-warn-ligther), 1),
  100: rgba(var(--color-warn), 1),
  100-dark: rgba(var(--color-warn-darker), 1),
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: rgba(var(--text-color-warn-ligther), 1),
    100: rgba(var(--text-color-warn), 1),
    100-dark: rgba(var(--text-color-warn-darker), 1),
  ),
);

$uxg-grass: (
  25: #d4efda,
  50: #a9e0b7,
  75: #80d194,
  100: #56c271,
  100-dark: #3c874e,
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: $dark-primary-text,
    100: $dark-primary-text,
    100-dark: $light-primary-text,
  ),
);

$uxg-amber: (
  25: #ffe1cd,
  50: #ffc39c,
  75: #ffa76d,
  100: #ff8a3d,
  100-dark: #b2602a,
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: $dark-primary-text,
    100: $dark-primary-text,
    100-dark: $light-primary-text,
  ),
);

$uxg-gold: (
  25: #fbebc7,
  50: #f7d991,
  75: #f3c65a,
  100: #f0b323,
  100-dark: #a87d18,
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: $dark-primary-text,
    100: $dark-primary-text,
    100-dark: $light-primary-text,
  ),
);

$uxg-lime: (
  25: #f3f4d3,
  50: #e8eaa9,
  75: #dde17f,
  100: #d2d755,
  100-dark: #92963b,
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: $dark-primary-text,
    100: $dark-primary-text,
    100-dark: $light-primary-text,
  ),
);

$uxg-ocean: (
  25: #d6eff5,
  50: #ade0eb,
  75: #84d0e1,
  100: #5bc1d7,
  100-dark: #3f8696,
  contrast: (
    25: $dark-primary-text,
    50: $dark-primary-text,
    75: $dark-primary-text,
    100: $dark-primary-text,
    100-dark: $light-primary-text,
  ),
);

$uxg-gradient: (
  vertical: linear-gradient(180deg, var(--color-gradient)),
  horizontal: linear-gradient(90deg, var(--color-gradient)),
  diagonal: linear-gradient(45deg, var(--color-gradient)),
  contrast: (
    vertical: rgba(var(--text-color-gradient), 1),
    horizontal: rgba(var(--text-color-gradient), 1),
    diagonal: rgba(var(--text-color-gradient), 1),
  ),
);

// Background palette for light themes.
$uxg-light-theme-background: (
  status-bar: map_get($mat-grey, 300),
  app-bar: white,
  background: map_get($mat-grey, 50),
  hover: rgba(black, 0.04),
  card: #fff,
  dialog: white,
  disabled-button: rgba(black, 0.12),
  raised-button: white,
  focused-button: $dark-focused,
  selected-button: map_get($mat-grey, 300),
  selected-text: map_get($uxg-violet, 100),
  selected-disabled-button: map_get($mat-grey, 400),
  disabled-button-toggle: map_get($mat-grey, 200),
  unselected-chip: map_get($mat-grey, 300),
  disabled-list-option: map_get($mat-grey, 200),
  tooltip: map_get($mat-grey, 700),
);

// Background palette for dark themes.
$uxg-dark-theme-background: (
  status-bar: black,
  app-bar:    #242424,
  background: #191919,
  hover:      rgba(white, 0.04),
  card:       #242424,
  dialog:     #242424,
  disabled-button: rgba(white, 0.12),
  raised-button: #242424,
  focused-button: $light-focused,
  selected-button: map_get($mat-grey, 900),
  selected-text: mat_color($uxg-violet, 500, 0.5),
  selected-disabled-button: #242424,
  disabled-button-toggle: black,
  unselected-chip: map_get($mat-grey, 700),
  disabled-list-option: black,
  tooltip: map_get($mat-grey, 700),
);

// Foreground palette for light themes.
$uxg-light-theme-foreground: (
  base: $uxg-charcoal,
  divider: $dark-dividers,
  dividers: $dark-dividers,
  disabled: $dark-disabled-text,
  disabled-button: rgba(black, 0.25),
  disabled-text: $dark-disabled-text,
  elevation: black,
  hint-text: $dark-disabled-text,
  secondary-text: $dark-secondary-text,
  icon: rgba(black, 0.5),
  icons: rgba(black, 0.5),
  text: rgba(var(--text-color), 1),
  logo: var(--logo),
  slider-min: $uxg-charcoal,
  slider-off: rgba(black, 0.25),
  slider-off-active: rgba(black, 0.38),
);

// Foreground palette for dark themes.
$uxg-dark-theme-foreground: (
  base: white,
  divider: $light-dividers,
  dividers: $light-dividers,
  disabled: $light-disabled-text,
  disabled-button: rgba(white, 0.3),
  disabled-text: $light-disabled-text,
  elevation: black,
  hint-text: $light-disabled-text,
  secondary-text: $light-secondary-text,
  icon: white,
  icons: white,
  text: rgba(var(--text-color), 1),
  logo: var(--logo),
  slider-min: white,
  slider-off: rgba(white, 0.3),
  slider-off-active: rgba(white, 0.3),
);
