@use 'sass:map';
@use '@angular/material' as mat;
@use '../core/theming/palette' as palette;

@mixin theme($theme) {
  $primary: map.get($theme, primary);
  $accent: map.get($theme, accent);
  $warn: map.get($theme, warn);
  $error: map.get($theme, error);
  $foreground: map.get($theme, foreground);

  .mat-stroked-button {
    &.mat-primary {
      border-color: palette.get-color-from-palette($primary, default, 0.5);
    }

    &.mat-accent {
      border-color: palette.get-color-from-palette($accent, default, 0.5);
    }

    &.mat-error {
      border-color: palette.get-color-from-palette($error, default, 0.5);
    }

    &[disabled] {
      background-color: palette.get-color-from-palette($foreground, text, 0.1);
      border-color: palette.get-color-from-palette($foreground, text, 0.25);
    }
  }

  .mat-flat-button {
    &.mat-error {
      background: palette.get-color-from-palette($error, default);
      color: palette.get-color-from-palette($error, default-contrast);
    }
  }

  .mat-error {
    color: palette.get-color-from-palette($error, default);

    .mat-button-focus-overlay {
      background: palette.get-color-from-palette($error, default);
    }
  }

  .mat-flat-button,
  .mat-raised-button,
  .mat-fab,
  .mat-mini-fab {
    &.mat-primary,
    &.mat-accent,
    &.mat-warn,
    &.mat-error  {
      & .mat-ripple-element {
        // since the use of CSS variables,
        // opacity is already set on rgba background-color.
        // see #288
        opacity: 0.1;
      }
    }

    &.cdk-keyboard-focused {
      &.mat-primary .mat-button-focus-overlay {
        background: palette.get-color-from-palette($primary, default-contrast);
        opacity: 0.24;
      }

      &.mat-accent .mat-button-focus-overlay {
        background: palette.get-color-from-palette($accent, default-contrast);
        opacity: 0.24;
      }

      &.mat-gradient .mat-button-focus-overlay {
        background: palette.get-color-from-palette($primary, default-contrast);
        opacity: 0.24;
      }

      &.mat-warn .mat-button-focus-overlay {
        background: palette.get-color-from-palette($warn, default-contrast);
        opacity: 0.24;
      }
    }
  }

  .mat-icon-button {
    &.mat-neutral,
    &.mat-gradient {
      .mat-button-ripple {
        color: palette.get-color-from-palette($primary, default);
      }
    }

    &.mat-neutral {
      .mat-icon {
        color: palette.get-color-from-palette($foreground, text, 0.75);
      }
    }

    &.mat-gradient {
      .mat-icon {
        background: palette.get-color-from-palette(palette.$uxg-gradient, vertical);
        background-clip: text;
        -webkit-text-fill-color: transparent;
      }
    }
  }

  .mat-fab.mat-gradient {
    color: palette.get-color-from-palette($primary, default-contrast);
    background: palette.get-color-from-palette(palette.$uxg-gradient, vertical);
  }

  // graceful degradation targeting IE10+
  @media all and (-ms-high-contrast: none), (-ms-high-contrast: active) {
    .mat-icon-button {
      &.mat-gradient {
        .mat-icon {
          background: none !important;
          color: palette.get-color-from-palette($accent, default);
        }
      }
    }
  }
}

@mixin typography($config) {
  button[dense],
  a[dense],
  *[dense] button {
    @include mat.typography-level($config, button-3);
  }

  button[large],
  a[large],
  *[large] button {
    @include mat.typography-level($config, button-1);
  }
}
