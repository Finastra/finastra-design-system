@use 'sass:string';
@use './color/light';
@use './color/dark';
@use './color/mixins' as colors;
@use './elevation/mixins' as elevation;
@use './typography/mixins' as typography;
@use './spacing/mixins' as spacing;

/// Loads all custom properties
///
/// @param {map} $properties - Map with your theme colors
@mixin custom-properties($properties) {
    @include colors.custom-properties($properties);
    @include elevation.custom-properties();
    @include typography.custom-properties();
    @include spacing.custom-properties();
}

/// Loads the light theme custom properties inside your container.
///
/// @example
///   @use '@finastra/fds-theme' as fds;
///     .my-container {
///        @include fds.use-theme-light();
///      }
@mixin use-light-theme() {
    @include wrap() {
        @include custom-properties(light.$properties);
    }
}

/// Loads the dark theme custom properties inside your container.
///
/// @example
///   @use '@finastra/fds-theme' as fds;
///     .my-container {
///        @include fds.use-theme-dark();
///      }
@mixin use-dark-theme() {
    @include wrap() {
        @include custom-properties(dark.$properties);
    }
}

/// Use this mixin to include any content block inside your class or root.
///
/// @param {string=} $class - The class name to validate
@mixin wrap($class: null) {
    @if $class and $class != 'root' and $class != ':root' {
        $class: is-valid-name($class);
        #{$class} {
            @content;
        }
    } @else {
        #{if(&, '&', ':root')} {
            @content;
        }
    }
}

/// Check if the class name is valid
///
/// @param {string} $class - The class name to validate
@function is-valid-name($class) {
    @if $class == '' or $class == ' ' {
        @error ''#{$class}' name is empty';
    }

    @if string.index($class, '.') == 1 and string.length($class) <= 1 {
        @error 'You must specify a name to your class';
    }

    @if string.index($class, '.') != 1 and $class != ':root' and $class != 'root' {
        $class: '.' + $class;
    }

    @return $class;
}
