@use 'sass:map';
@use '@angular/material' as mat;
@use '~@finastra/angular-theme' as fds;
@use '@angular/flex-layout/core/sass/layout-bp' as flex-layout;

@mixin uxg-global-search-colors($theme) {
  $foreground: map.get($theme, foreground);
  $background: map.get($theme, background);

  .uxg-global-search-overlay-backdrop {
    background: fds.get-color-from-palette($background, dialog, 0.95);
  }

  .uxg-global-search-overlay {
    color: fds.get-color-from-palette($foreground, text);

    .uxg-global-search-results-area {
      .uxg-global-search-result-group-header {
        .uxg-global-search-result-group-counter {
          opacity: 0.75;
        }
      }
    }

    .uxg-global-search-results-counter {
      opacity: 0.75;
    }

    .uxg-global-search-input-area {
      .uxg-global-search-input {
        .mat-form-field-label {
          color: fds.get-color-from-palette($foreground, text);
        }
      }
    }

    .uxg-global-search-close-overlay-button {
      opacity: 0.75;
    }
  }
}

@mixin typography($config: null) {
  @if $config==null {
    $config: uxg-typography-config();
  }

  uxg-global-search-overlay {
    .uxg-global-search-input-area {
      .uxg-global-search-input {
        @include mat.typography-level($config, h2);
        font-feature-settings: "liga"0, "clig"0;

        .mat-form-field-label {
          @include mat.typography-level($config, h2);

          @include flex-layout.layout-bp(xs) {
            @include mat.typography-level($config, h4);
          }
        }

        .mat-input-element {
          @include flex-layout.layout-bp(xs) {
            @include mat.typography-level($config, h4);
          }
        }
      }

      .uxg-global-search-icon {
        font-size: mat.font-size($config, h1);
        opacity: 0.75;

        @include flex-layout.layout-bp(xs) {
          font-size: mat.font-size($config, h3);
        }
      }
    }

    .uxg-global-search-results-area {
      .uxg-global-search-result-group-header {
        .uxg-h4 {
          @include flex-layout.layout-bp(xs) {
            @include mat.typography-level($config, h5);
          }
        }

        .uxg-global-search-result-group-counter {
          @include mat.typography-level($config, display-6);

          @include flex-layout.layout-bp(xs) {
            @include mat.typography-level($config, subtitle-1);
          }
        }
      }
    }

    .uxg-global-search-results-filter {
      @include mat.typography-level($config, body-1);

      .uxg-h5 {
        @include flex-layout.layout-bp(xs) {
          @include mat.typography-level($config, h6);
        }
      }

      .mat-checkbox-label {
        @include flex-layout.layout-bp(xs) {
          @include mat.typography-level($config, body-2);
        }
      }
    }

    .uxg-global-search-results-counter {
      @include mat.typography-level($config, body-1);

      @include flex-layout.layout-bp(xs) {
        @include mat.typography-level($config, body-2);
      }
    }
  }
}

@mixin theme($theme) {
  @include uxg-global-search-colors($theme);
}
