@import '@material/card/mdc-card.scss';
@import '@material/theme/_mixins.scss';

$query: mdc-feature-all();
$feat-color: mdc-feature-create-target($query, color);
$feat-structure: mdc-feature-create-target($query, structure);

:host {
  display: inline-flex;
  @include mdc-theme-prop(
    border-radius,
    (
      varname: --mdc-card-border-radius,
      fallback: 4px 4px 4px 4px,
    )
  );
}

.mdc-card {
  border-radius: inherit;
  flex: 1;
}

slot {
  border-radius: inherit;
}

.mdc-card__media-first-child,
.mdc-card__primary-action:first-child {
  border-top-left-radius: inherit;
  border-top-right-radius: inherit;
}

.mdc-card__media-last-child,
.mdc-card__primary-action-last-child {
  border-bottom-right-radius: inherit;
  border-bottom-left-radius: inherit;
}

/* Set styles for .mdc-card__action based on slot. Styles will not be available from Light DOM. */
slot::slotted(.mdc-card__action) {
  @include mdc-feature-targets($feat-structure) {
    @include mdc-card-actions-layout_(inline-flex);

    justify-content: center;
    cursor: pointer;
    user-select: none;
  }
}

/* Set styles for .mdc-card__action:focus based on slot. Styles will not be available from Light DOM. */
slot::slotted(.mdc-card__action:focus) {
  @include mdc-feature-targets($feat-structure) {
    outline: none;
  }
}

/* Set styles for .mdc-card__action--button based on slot. Styles will not be available from Light DOM. */
slot[name='button-action']::slotted(.mdc-card__action--button) {
  @include mdc-feature-targets($feat-structure) {
    @include mdc-rtl-reflexive-box(margin, right, 8px);
  }
}

/* Set styles for .mdc-card__action--button:last-child based on slot. Styles will not be available from Light DOM. */
slot[name='button-action']::slotted(.mdc-card__action--button:last-child) {
  @include mdc-feature-targets($feat-structure) {
    @include mdc-rtl-reflexive-box(margin, right, 0);
  }
}

/* Set styles for .mdc-card__actions-full-bleed .mdc-card__action--button based on slot. Styles will not be available from Light DOM. */
.mdc-card__actions--full-bleed slot[name='button-action']::slotted(.mdc-card__action--button) {
  @include mdc-feature-targets($feat-structure) {
    justify-content: space-between;
    width: 100%;
    height: auto;
    max-height: none;
    margin: 0;
    // padding: 8px 16px;
    /* @noflip */
    text-align: left;
  }

  @include mdc-rtl {
    @include mdc-feature-targets($feat-structure) {
      /* @noflip */
      text-align: right;
    }
  }
}

/* Set styles for .mdc-card__action--icon based on slot. Styles will not be available from Light DOM. */
slot[name='icon-action']::slotted(.mdc-card__action--icon) {
  @include mdc-feature-targets($feat-structure) {
    // Icon buttons are taller than buttons, so we need to adjust their margins to prevent the action row from expanding.
    margin: -6px 0;

    // Same padding as mdc-icon-button.
    // padding: 12px;
  }
}

/* Set styles for .mdc-card__action--icon:not(:disabled) based on slot. Styles will not be available from Light DOM. */
slot[name='icon-action']::slotted(.mdc-card__action--icon:not(:disabled)) {
  @include mdc-feature-targets($feat-color) {
    @include mdc-theme-prop(color, text-icon-on-background);
  }
}

.mdc-card__primary-action {
  flex: 1;
}

slot[name='primary-action'] {
  display: inline-flex;
  outline: none;
}

slot[name='primary-action']::slotted(*) {
  border-radius: inherit;
}

.mdc-card__media {
  flex: 1;
  background-color: inherit;
  @include mdc-theme-prop(
    background-image,
    (
      varname: --fds-card-media-background-image,
      fallback: none,
    )
  );
}
